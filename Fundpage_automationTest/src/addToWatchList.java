import java.util.Date;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import org.testng.annotations.*;
import org.testng.util.TimeUtils;

import static org.testng.Assert.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.ExpectedCondition;

import java.io.File;
import java.io.IOException;


public class addToWatchList {
  private WebDriver driver;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();
  
  @BeforeClass(alwaysRun = true)
  public void setUp() throws Exception {
  driver = new ChromeDriver();
  driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void login() throws Exception {	// Get user name and password from Keyboard input
/*	 String uname;
	 String upwd;
	 Scanner sc = new Scanner(System.in); 
	 System.out.println("Enter a valid Username:");  
	 uname = sc.nextLine();
	 System.out.println("Enter the password of that UserName:");
	 upwd = sc.nextLine();
*/	  
	driver.get("https://www.fundpage.com/");
    driver.findElement(By.xpath("//a[contains(text(),'Login')]")).click();
    driver.findElement(By.id("UserName")).sendKeys("gregyang");
    driver.findElement(By.id("inputPassword")).sendKeys("Abcde@123");
    driver.findElement(By.xpath("//button[@type='submit']")).click();
    driver.get("https://www.fundpage.com/Funds/MyFavourites");
	 
//	 int totalRowOfList = Integer.valueOf( driver.findElement(By.xpath("//div[@class='mail-pagination']//strong[1]")).getText());  // Get the Row number of My Watch List
	 
/*	 for (int i=1;i<=17;i++) { 
	 driver.findElement(By.xpath("(//img[@src='/Images/delete.png'])[1]")).click();		// Clean My Watch List
	 	int curRow = Integer.valueOf( driver.findElement(By.xpath("//div[@class='mail-pagination']//strong[1]")).getText());
	 	while ((!(curRow == 20 - i))&&(curRow != 1)) {
		 TimeUnit.MICROSECONDS.sleep(50);
	 	}
	 	driver.get("https://www.fundpage.com/Funds/MyFavourites");
	 }*/
  }
  
  @Test(dependsOnMethods= {"login"})
  public void search() throws Exception {
//	  String noResultFound;
	String[] toCompare= {//"A",
		//	"AA",
	//		"AAC",
//			"AACG",
/*			"AACIU",
			"AADI",
			"AAIC",
			"AAIC^B",
			"AAIC^C",
			"AAIN",
			"AAL",
			"AAMC",
			"AAME",
			"AAN",
			"AAOI",
			"AAON",
			"AAP",
			"AAPL",
			"AAQC",
			"AAT",
			"AATC",
			"AAU",
			"AAWW",
			"AB",
			"ABB",
			"ABBV",
			"ABC",
			"ABCB",
			"ABCL",
			"ABCM",
			"ABEO",
			"ABEV",
			"ABG",
			"ABGI",
			"ABIO",
			"ABM",
			"ABMD",
			"ABNB",
			"ABOS",
			"ABR",
			"ABR^D",
			"ABR^E",
			"ABSI",
			"ABST",
			"ABT",
			"ABTX",
			"ABUS",
			"ABVC",
			"AC",
			"ACA",
			"ACAD",
			"ACAH",
			"ACAHU",
			"ACAHW",
			"ACB",
			"ACBA",
			"ACBAU",
			"ACBAW",
			"ACBI",
			"ACC",
			"ACCD",
			"ACCO",
			"ACEL",
			"ACER",
			"ACET",
			"ACEV",
			"ACEVU",
			"ACEVW",
			"ACGL",
			"ACGLN",
			"ACGLO",
			"ACGLP",
			"ACH",
			"ACHC",
			"ACHL",
			"ACHR",
			"ACHV",
			"ACI",
			"ACII",
			"ACIU",
			"ACIW",
			"ACKIT",
			"ACKIU",
			"ACKIW",
			"ACLS",
			"ACM",
			"ACMR",
			"ACN",
			"ACNB",
			"ACOR",
			"ACP",
			"ACP^A",
			"ACQR",
			"ACQRU",
			"ACQRW",
			"ACR",
			"ACR^C",
			"ACR^D",
			"ACRE",
			"ACRO",
			"ACRS",
			"ACRX",
			"ACST",
			"ACT",
			"ACTD",
			"ACTDU",
			"ACTDW",
			"ACTG",
			"ACU",
			"ACV",
			"ACVA",
			"ACXP",
			"ACY",
			"ADAG",
			"ADAP",
			"ADBE",
			"ADC",
			"ADC^A",
			"ADCT",
			"ADER",
			"ADERU",
			"ADERW",
			"ADES",
			"ADEX",
			"ADF",
			"ADGI",
			"ADI",
			"ADIL",
			"ADILW",
			"ADM",
			"ADMA",
			"ADMP",
			"ADMS",
			"ADN",
			"ADNT",
			"ADNWW",
			"ADOC",
			"ADOCR",
			"ADOCW",
			"ADP",
			"ADPT",
			"ADRA",
			"ADS",
			"ADSK",
			"ADT",
			"ADTN",
			"ADTX",
			"ADUS",
			"ADV",
			"ADVM",
			"ADVWW",
			"ADX",
			"ADXN",
			"ADXS",
			"AE",
			"AEAC",
			"AEACU",
			"AEACW",
			"AEE",
			"AEF",
			"AEFC",
			"AEG",
			"AEHAU",
			"AEHL",
			"AEHR",
			"AEI",
			"AEIS",
			"AEL",
			"AEL^A",
			"AEL^B",
			"AEM",
			"AEMD",
			"AENZ",
			"AEO",
			"AEP",
			"AEPPL",
			"AEPPZ",
			"AER",
			"AERI",
			"AES",
			"AESC",
			"AESE",
			"AEVA",
			"AEY",
			"AEYE",
			"AEZS",
			"AFAQ",
			"AFAQU",
			"AFAQW",
			"AFB",
			"AFBI",
			"AFCG",
			"AFG",
			"AFGB",
			"AFGC",
			"AFGD",
			"AFGE",
			"AFI",
			"AFIB",
			"AFIN",
			"AFINO",
			"AFINP",
			"AFL",
			"AFMD",
			"AFRM",
			"AFT",
			"AFYA",
			"AG",
			"AGAC",
			"AGBA",
			"AGBAR",
			"AGBAW",
			"AGC",
			"AGCB",
			"AGCO",
			"AGCUU",
			"AGCWW",
			"AGD",
			"AGE",
			"AGEN",
			"AGFS",
			"AGFY",
			"AGGRU",
			"AGGRW",
			"AGI",
			"AGIL",
			"AGILW",
			"AGIO",
			"AGL",
			"AGLE",
			"AGM",
			"AGM^C",
			"AGM^D",
			"AGM^E",
			"AGM^F",
			"AGM^G",
			"AGMH",
			"AGNC",
			"AGNCM",
			"AGNCN",
			"AGNCO",
			"AGNCP",
			"AGO",
			"AGO^E",
			"AGO^F",
			"AGR",
			"AGRI",
			"AGRIW",
			"AGRO",
			"AGRX",
			"AGS",
			"AGTC",
			"AGTI",
			"AGX",
			"AGYS",
			"AHCO",
			"AHH",
			"AHH^A",
			"AHL^C",
			"AHL^D",
			"AHL^E",
			"AHPAU",
			"AHPI",
			"AHT",
			"AHT^D",
			"AHT^F",
			"AHT^G",
			"AHT^H",
			"AHT^I",
			"AI",
			"AIC",
			"AIF",
			"AIG",
			"AIG^A",
			"AIH",
			"AIHS",
			"AIKI",
			"AIM",
			"AIMC",
			"AIN",
			"AINC",
			"AINV",
			"AIO",
			"AIR",
			"AIRC",
			"AIRG",
			"AIRI",
			"AIRT",
			"AIRTP",
			"AIT",
			"AIV",
			"AIZ",
			"AIZN",
			"AJG",
			"AJRD",
			"AJX",
			"AJXA",
			"AKA",
			"AKAM",
			"AKBA",
			"AKIC",
			"AKICU",
			"AKICW",
			"AKO/A",
			"AKO/B",
			"AKR",
			"AKRO",
			"AKTS",
			"AKTX",
			"AKU",
			"AKUS",
			"AKYA",
			"AL",
			"AL^A",
			"ALAC",
			"ALACR",
			"ALACW",
			"ALB",
			"ALBO",
			"ALC",
			"ALCC",
			"ALCO",
			"ALDX",
			"ALE",
			"ALEC",
			"ALEX",
			"ALF",
			"ALFIW",
			"ALG",
			"ALGM",
			"ALGN",
			"ALGS",
			"ALGT",
			"ALHC",
			"ALIM",
			"ALIN^A",
			"ALIN^B",
			"ALIN^E",
			"ALIT",
			"ALJJ",
			"ALK",
			"ALKS",
			"ALKT",
			"ALL",
			"ALL^B",
			"ALL^G",
			"ALL^H",
			"ALL^I",
			"ALLE",
			"ALLK",
			"ALLO",
			"ALLT",
			"ALLY",
			"ALLY^A",
			"ALNA",
			"ALNY",
			"ALOT",
			"ALP^Q",
			"ALPA",
			"ALPAU",
			"ALPAW",
			"ALPN",
			"ALRM",
			"ALRN",
			"ALRS",
			"ALSN",
			"ALT",
			"ALTA",
			"ALTG",
			"ALTG^A",
			"ALTM",
			"ALTO",
			"ALTR",
			"ALTU",
			"ALTUU",
			"ALTUW",
			"ALV",
			"ALVR",
			"ALX",
			"ALXO",
			"ALYA",
			"ALZN",
			"AM",
			"AMAL",
			"AMAM",
			"AMAO",
			"AMAOU",
			"AMAT",
			"AMBA",
			"AMBC",
			"AMBO",
			"AMBP",
			"AMC",
			"AMCI",
			"AMCIU",
			"AMCR",
			"AMCX",
			"AMD",
			"AME",
			"AMED",
			"AMEH",
			"AMG",
			"AMGN",
			"AMH",
			"AMH^F",
			"AMH^G",
			"AMH^H",
			"AMHC",
			"AMHCU",
			"AMHCW",
			"AMK",
			"AMKR",
			"AMN",
			"AMNB",
			"AMOT",
			"AMOV",
			"AMP",
			"AMPE",
			"AMPG",
			"AMPGW",
			"AMPH",
			"AMPI",
			"AMPY",
			"AMR",
			"AMRC",
			"AMRK",
			"AMRN",
			"AMRS",
			"AMRX",
			"AMS",
			"AMSC",
			"AMSF",
			"AMST",
			"AMSWA",
			"AMT",
			"AMTB",
			"AMTBB",
			"AMTI",
			"AMTX",
			"AMWD",
			"AMWL",
			"AMX",
			"AMYT",
			"AMZN",
			"AN",
			"ANAB",
			"ANAC",
			"ANAT",
			"ANDE",
			"ANEB",
			"ANET",
			"ANF",
			"ANGI",
			"ANGN",
			"ANGO",
			"ANIK",
			"ANIP",
			"ANIX",
			"ANNX",
			"ANPC",
			"ANSS",
			"ANTE",
			"ANTM",
			"ANVS",
			"ANY",
			"ANZUU",
			"ANZUW",
			"AOD",
			"AOMR",
			"AON",
			"AOS",
			"AOSL",
			"AOUT",
			"AP",
			"APA",
			"APAC",
			"APACU",
			"APACW",
			"APAM",
			"APD",
			"APDN",
			"APEI",
			"APEN",
			"APG",
			"APGB",
			"APH",
			"API",
			"APLE",
			"APLS",
			"APLT",
			"APM",
			"APMIU",
			"APO",
			"APO^A",
			"APO^B",
			"APOG",
			"APOP",
			"APP",
			"APPF",
			"APPH",
			"APPHW",
			"APPN",
			"APPS",
			"APR",
			"APRE",
			"APRN",
			"APSG",
			"APT",
			"APTM",
			"APTMU",
			"APTO",
			"APTS",
			"APTV",
			"APTV^A",
			"APTX",
			"APVO",
			"APWC",
			"APYX",
			"AQB",
			"AQMS",
			"AQN",
			"AQNA",
			"AQNB",
			"AQNU",
			"AQST",
			"AQUA",
			"AR",
			"ARAV",
			"ARAY",
			"ARBG",
			"ARBGU",
			"ARBGW",
			"ARBK",
			"ARC",
			"ARCB",
			"ARCC",
			"ARCE",
			"ARCH",
			"ARCO",
			"ARCT",
			"ARD",
			"ARDC",
			"ARDS",
			"ARDX",
			"ARE",
			"AREC",
			"ARES",
			"ARGD",
			"ARGO",
			"ARGO^A",
			"ARGUU",
			"ARGX",
			"ARI",
			"ARKO",
			"ARKOW",
			"ARKR",
			"ARL",
			"ARLO",
			"ARLP",
			"ARMK",
			"ARMP",
			"ARNA",
			"ARNC",
			"AROC",
			"AROW",
			"ARQQ",
			"ARQQW",
			"ARQT",
			"ARR",
			"ARR^C",
			"ARRW",
			"ARRWU",
			"ARRY",
			"ARTA",
			"ARTAU",
			"ARTAW",
			"ARTL",
			"ARTLW",
			"ARTNA",
			"ARTW",
			"ARVL",
			"ARVN",
			"ARW",
			"ARWR",
			"ARYD",
			"ARYE",
			"ASA",
			"ASAI",
			"ASAN",
			"ASAQ",
			"ASAX",
			"ASAXU",
			"ASAXW",
			"ASB",
			"ASB^E",
			"ASB^F",
			"ASC",
			"ASG",
			"ASGI",
			"ASGN",
			"ASH",
			"ASIX",
			"ASLE",
			"ASLEW",
			"ASLN",
			"ASM",
			"ASMB",
			"ASML",
			"ASND",
			"ASO",
			"ASPA",
			"ASPAU",
			"ASPAW",
			"ASPC",
			"ASPCU",
			"ASPCW",
			"ASPN",
			"ASPS",
			"ASPU",
			"ASR",
			"ASRT",
			"ASRV",
			"ASRVP",
			"ASTC",
			"ASTE",
			"ASTR",
			"ASTRW",
			"ASTS",
			"ASTSW",
			"ASUR",
			"ASX",
			"ASXC",
			"ASYS",
			"ASZ",
			"ATA",
			"ATAI",
			"ATAQ",
			"ATAX",
			"ATC",
			"ATCO",
			"ATCO^D",
			"ATCO^H",
			"ATCO^I",
			"ATCOL",
			"ATCX",
			"ATEC",
			"ATEN",
			"ATER",
			"ATEX",
			"ATGE",
			"ATH",
			"ATH^A",
			"ATH^B",
			"ATH^C",
			"ATH^D",
			"ATHA",
			"ATHE",
			"ATHM",
			"ATHN",
			"ATHX",
			"ATI",
			"ATIF",
			"ATIP",
			"ATKR",
			"ATLC",
			"ATLCP",
			"ATLO",
			"ATMR",
			"ATNF",
			"ATNFW",
			"ATNI",
			"ATNM",
			"ATNX",
			"ATO",
			"ATOM",
			"ATOS",
			"ATR",
			"ATRA",
			"ATRC",
			"ATRI",
			"ATRO",
			"ATRS",
			"ATSG",
			"ATSPT",
			"ATSPU",
			"ATSPW",
			"ATTO",
			"ATUS",
			"ATVC",
			"ATVCU",
			"ATVCW",
			"ATVI",
			"ATXI",
			"ATXS",
			"ATY",
			"AU",
			"AUB",
			"AUBAP",
			"AUBN",
			"AUD",
			"AUDC",
			"AUID",
			"AUMN",
			"AUPH",
			"AURC",
			"AURCU",
			"AURCW",
			"AUS",
			"AUTL",
			"AUTO",
			"AUUD",
			"AUUDW",
			"AUVI",
			"AUVIP",
			"AUY",
			"AVA",
			"AVAH",
			"AVAL",
			"AVAN",
			"AVAV",
			"AVB",
			"AVCO",
			"AVCT",
			"AVCTW",
			"AVD",
			"AVDL",
			"AVEO",
			"AVGO",
			"AVGOP",
			"AVGR",
			"AVID",
			"AVIR",
			"AVK",
			"AVLR",
			"AVNS",
			"AVNT",
			"AVNW",
			"AVO",
			"AVPT",
			"AVPTW",
			"AVRO",
			"AVT",
			"AVTE",
			"AVTR",
			"AVTR^A",
			"AVTX",
			"AVXL",
			"AVY",
			"AVYA",
			"AWF",
			"AWH",
			"AWI",
			"AWK",
			"AWP",
			"AWR",
			"AWRE",
			"AWX",
			"AX",
			"AXDX",
			"AXGN",
			"AXL",
			"AXLA",
			"AXNX",
			"AXON",
			"AXP",
			"AXR",
			"AXS",
			"AXS^E",
			"AXSM",
			"AXTA",
			"AXTI",
			"AXU",
			"AY",
			"AYI",
			"AYLA",
			"AYRO",
			"AYTU",
			"AYX",
			"AZEK",
			"AZN",
			"AZO",
			"AZPN",
			"AZRE",
			"AZUL",
			"AZYO",
			"AZZ",*/
/*			"B",
			"BA",
			"BABA",
			"BAC",
			"BAC^B",
			"BAC^E",
			"BAC^K",
			"BAC^L",
			"BAC^M",
			"BAC^N",
			"BAC^O",
			"BAC^P",
			"BAH",
			"BAK",
			"BALY",
			"BAM",
			"BAMH",
			"BAMI",
			"BAMR",
			"BANC",
			"BANC^E",
			"BAND",
			"BANF",
			"BANFP",
			"BANR",
			"BANX",
			"BAOS",
			"BAP",
			"BARK",
			"BASE",
			"BATL",
			"BATRA",
			"BATRK",
			"BAX",
			"BB",
			"BBAR",
			"BBBY",
			"BBCP",
			"BBD",
			"BBDC",
			"BBDO",
			"BBGI",
			"BBI",
			"BBIG",
			"BBIO",
			"BBL",
			"BBN",
			"BBQ",
			"BBSI",
			"BBU",
			"BBVA",
			"BBW",
			"BBWI",
			"BBY",
			"BC",
			"BC^A",
			"BC^B",
			"BC^C",
			"BCAB",
			"BCAC",
			"BCACU",
			"BCACW",
			"BCAT",
			"BCBP",
			"BCC",
			"BCDA",
			"BCDAW",
			"BCE",
			"BCEI",
			"BCEL",
			"BCH",
			"BCLI",
			"BCML",
			"BCO",
			"BCOR",
			"BCOV",
			"BCOW",
			"BCPC",
			"BCRX",
			"BCS",
			"BCSF",
			"BCTX",
			"BCTXW",
			"BCV",
			"BCV^A",
			"BCX",
			"BCYC",
			"BCYP",
			"BCYPU",
			"BCYPW",
			"BDC",
			"BDJ",
			"BDL",
			"BDN",
			"BDR",
			"BDSI",
			"BDSX",
			"BDTX",
			"BDX",
			"BDXB",
			"BE",
			"BEAM",
			"BECN",
			"BEDU",
			"BEEM",
			"BEEMW",
			"BEKE",
			"BELFA",
			"BELFB",
			"BEN",
			"BENE",
			"BENER",
			"BENEU",
			"BENEW",
			"BEP",
			"BEP^A",
			"BEPC",
			"BEPH",
			"BERY",
			"BEST",
			"BF/A",
			"BF/B",
			"BFAM",
			"BFC",
			"BFI",*/
			/*"BFIIW",
			"BFIN",
			"BFK",
			"BFLY",
			"BFRA",
			"BFS",
			"BFS^D",
			"BFS^E",
			"BFST",
			"BFZ",
			"BG",
			"BGB",
			"BGCP",
			"BGFV",
			"BGH",
			"BGI",
			"BGIO",
			"BGNE",
			"BGR",
			"BGRY",
			"BGRYW",
			"BGS",
			"BGSF",
			"BGSX",
			"BGT",
			"BGX",
			"BGY",
			"BH",
			"BHAT",
			"BHB",
			"BHC",
			"BHE",
			"BHF",
			"BHFAL",
			"BHFAN",
			"BHFAO",
			"BHFAP",
			"BHG",
			"BHK",
			"BHLB",
			"BHP",
			"BHR",
			"BHR^B",
			"BHR^D",
			"BHSE",
			"BHSEU",
			"BHSEW",
			"BHTG",
			"BHV",
			"BHVN",
			"BIDU",
			"BIF",
			"BIG",
			"BIGC",
			"BIGZ",
			"BIIB",
			"BILI",
			"BILL",
			"BIMI",
			"BIO",
			"BIO/B",
			"BIOC",
			"BIOL",
			"BIOT",
			"BIOTU",
			"BIOTW",
			"BIOX",
			"BIP",
			"BIP^A",
			"BIP^B",
			"BIPC",
			"BIPH",
			"BIT",
			"BITE",
			"BITF",*/
			"BIVI",
			"BJ",
			"BJRI",
			"BK",
			"BKCC",
			"BKD",
			"BKE",
			"BKEP",
			"BKEPP",
			"BKH",
			"BKI",
			"BKN",
			"BKNG",
			"BKR"
};
	
	
	
	
	
	for (int i=0;i<toCompare.length;i++) {  		// Add Securities to My Watch List by Searching Ticker
	driver.get("https://www.fundpage.com/Home/SecuritySearch");
	driver.findElement(By.xpath("(//i[@class='entypo-down-open'])[4]")).click();
	driver.findElement(By.id("sec_ticker")).sendKeys(toCompare[i]);
	driver.findElement(By.id("security-search-start")).click();
	
	
	try {
		driver.findElement(By.xpath("//div[@class='tile-header']//a[1]")).click();
		driver.findElement(By.xpath("//h3[text()='Add to watch list']")).click();		
	}catch (org.openqa.selenium.NoSuchElementException e) {
		System.out.println(toCompare[i]+" is not found.");
	}
	
	
//		if (!(driver.findElement(By.xpath("//h4[text()='No result found with the given search criteria.']")).isDisplayed())) {		}		
	}
  }
  
/*  @Test(dependsOnMethods= {"login","search"})
  public void compare() throws Exception {	// Multiple selection of Securities, and Compare.
	driver.get("https://www.fundpage.com/Funds/MyFavourites");
	driver.findElement(By.xpath("(//span[text()=' in total']/following::input)[1]")).click();
	driver.findElement(By.xpath("(//span[text()=' in total']/following::input)[2]")).click();
	driver.findElement(By.id("btnCompare")).click();
	
	String curUrl=driver.getCurrentUrl();
	while(!curUrl.equals("https://www.fundpage.com/Funds/CompareFunds")) {
		curUrl=driver.getCurrentUrl();
		TimeUnit.SECONDS.sleep(1);
	}
  }
*/		
/*  @Test(dependsOnMethods= {"login","search","compare"})
	public void screenShot() throws Exception {			// Screen Shot of the Compare Result
	try {
		driver.manage().window().maximize();
		String titleofResult = driver.findElement(By.xpath("//h4[@class='fp-header-margin-bottom']")).getText();
		File srcFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		String fileName = "Compare-"+titleofResult+ new Date().getTime() + ".jpg";
		FileHandler.copy(srcFile, new File("C:\\screenShot\\"+fileName));
    } catch (IOException e) {
        e.printStackTrace();
    }
  }
*/  
  @Test(dependsOnMethods= {"login","search"})
  public void logout() throws Exception {
/*	 driver.get("https://www.fundpage.com/Funds/MyFavourites");
	 
	 int totalRowOfList = Integer.valueOf( driver.findElement(By.xpath("//div[@class='mail-pagination']//strong[1]")).getText());  // Get the Row number of My Watch List
	 for (int i=1;i<=totalRowOfList;i++) { 
	 driver.findElement(By.xpath("(//img[@src='/Images/delete.png'])[1]")).click();		// Clean My Watch List
	 	int curRow = Integer.valueOf( driver.findElement(By.xpath("//div[@class='mail-pagination']//strong[1]")).getText());
	 	while ((!(curRow == totalRowOfList - i))&&(curRow != 1)) {
		 TimeUnit.MICROSECONDS.sleep(50);
	 	}	 
//	 driver.get("https://www.fundpage.com/Funds/MyFavourites");
	 }
*/	 
	 driver.findElement(By.xpath("//span[text()='Investment Opportunities']")).click();
	 driver.findElement(By.xpath("//a[contains(text(),'Log Out')]")).click();	  
  }
  
  @AfterClass(alwaysRun = true)
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
